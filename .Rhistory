Y = c(y0, y1)
if(sizeX != 0){
for(i in 1:sizeX){
x = X[which.min(X)] + i
y = Y[which.min(X)] + i*slope
Image[x, y] = 1L
}
}else{
for(i in 1:sizeY){
y = Y[which.min(X)] + i
Image[x0, y] = 1L
}
}
}else{
angle = angle%%360
angle.radians = angle * pi/180
tg = tan(angle.radians)
for (i in 0:size) {
if (angle < 45 || angle > 315){
i.x = i
i.y = round(i * tg)
}else if(angle >= 45 & angle <= 135){
i.y = i
i.x = round(i/tg)
}else if(angle > 135 & angle < 225){
i.x = i
i.y = abs(round(i * tg))
}else{
i.y = i
i.x = abs(round(i/tg))
}
Image[x0+i.x, y0+i.y] = 1L
}
}
return(Image)
}
invisible(lapply(seq(0,360,15), function(x) {ImDraw = drawLineImage(ImVoid, x0 = 1000, y0 = 1000, size = 500, angle = x);EBImage::display(ImDraw, method = 'raster')}))
drawLineImage = function(Image, x0 = 1, y0 = 1, x1 = NULL, y1 = NULL, size = 30, angle = 45){
if(!is.null(x1) & !is.null(y1)){
slope = (y1 - y0)/(x1 - x0)
sizeX = round(abs(x1 - x0))
sizeY = round(abs(y1 - y0))
X = c(x0, x1)
Y = c(y0, y1)
if(sizeX != 0){
for(i in 1:sizeX){
x = X[which.min(X)] + i
y = Y[which.min(X)] + i*slope
Image[x, y] = 1L
}
}else{
for(i in 1:sizeY){
y = Y[which.min(X)] + i
Image[x0, y] = 1L
}
}
}else{
angle = angle%%360
angle.radians = angle * pi/180
tg = tan(angle.radians)
for (i in 0:size) {
if (angle < 45 || angle > 315){
i.x = i
i.y = round(i * tg)
}else if(angle >= 45 & angle <= 135){
i.y = i
i.x = round(i/tg)
}else if(angle > 135 & angle < 225){
i.x = -i
i.y = -round(i * tg)
}else{
i.y = -i
i.x = -round(i/tg)
}
Image[x0+i.x, y0+i.y] = 1L
}
}
return(Image)
}
invisible(lapply(seq(0,360,15), function(x) {ImDraw = drawLineImage(ImVoid, x0 = 1000, y0 = 1000, size = 500, angle = x);EBImage::display(ImDraw, method = 'raster')}))
tan(3*pi/2)
tan(pi/2)
tan(-pi/2)
tan(5*pi/4)
tan(7*pi/4)
library(ColocalizR)
Launcher()
remove.packges('odbc')
remove.packages('odbc')
install.packages('ordbc')
install.packages('odbc')
library(ColocalizR)
Launcher()
remove.packages('RODBC')
install.packages('RODBC')
install.packages("RODBC")
library(ColocalizR)
Launcher()
DB = GetMDCInfo('YODA-SERVER')
DB = GetMDCInfo('VIDEO-SERVER')
DB = GetMDCInfo('HTS-SERVER')
DB = GetMDCInfo('HTS-SERVER')
DB = GetMDCInfo('VIDOE-SERVER')
DB = GetMDCInfo('VIDEO-SERVER')
DB = GetMDCInfo('VIDEO-SERVER')
DB = GetMDCInfo('VIDEO-SERVER')
library(ColocalizR)
Launcher()
Launcher()
Launcher()
devtools::install_github(repo = 'kroemerlab/ColocalizR')
library(ColocalizR)
Launcher()
library(ROxyden)
library(Roxygen)
library(Roxygen2)
library(roxygen2)
build
build()
devtools::build()
devtools::build('~/Documents/ColocalizR/ColocalizR_v.0.4.2')
devtools::build('~/Documents/ColocalizR/ColocalizR_v.0.4.2/ColocalizR')
remove.packages('ColocalizR')
install.packages("~/Documents/ColocalizR/ColocalizR_v.0.4.2/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
writeImage(paintObjects(MList[[Green]], paintObjects(MList[[Red]],paintObjects(CMask, rgbImage(green=MetaxpR::Normalize(IMList[[Green]], inputRange=Rm2),red =MetaxpR::Normalize(IMList[[Red]], inputRange=Rm3)), col = 'yellow', thick = T),
col = c('red', 'dark red'), opac = c(1,0.3), thick = F), col = c('green', 'darkgreen'), opac = c(1,0.3), thick = F), paste0(path, '/',Plate,'/',Time,'/',Well,'/',Well,'_s',Site,'_ImSeg1.tif'),compression = 'LZW')
Launcher()
Launcher()
gc()
remove.packages('ColocalizR')
devtools::build('~/Documents/ColocalizR/ColocalizR_v.0.4.2/ColocalizR')
install.packages("~/Documents/ColocalizR/ColocalizR_v.0.4.2/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
load("/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Analyses/ColocalizR/Test_ColocalizR/CellByCell/Test2_AllWithoutCellFeatures/Results/Summary.RData")
View(Summary)
Launcher()
load("/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Analyses/ColocalizR/Test_ColocalizR/CellByCell/Test1_AllExported/Results/Summary.RData")
View(Summary)
devtools::build('~/Documents/ColocalizR/ColocalizR_v.0.4.2/ColocalizR')
remove.packages('ColocalizR')
install.packages("~/Documents/ColocalizR/ColocalizR_v.0.4.2/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
52**2
42**2
x = 2+i
x = 2+j
x = 2+1i
x
mode(x)
typeof(x)
list(x)
mode(list(x))
typeof(list(x))
load("/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/PCC_12260.R.RData")
View(DrugID)
tapply(DrugID$WellID, DrugID$D, function(x) x)
tapply(DrugID$WellID, as.character(DrugID$D), function(x) x)
library(RBioFormats)
read.metadata('/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/ColocalizR_TrainingDataSet/Prestwick library screen 6hr 1um_C02_s4_w1.TIF')
md = read.metadata('/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/ColocalizR_TrainingDataSet/Prestwick library screen 6hr 1um_C02_s4_w1.TIF')
View(md)
md = read.metadata('/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/ColocalizR_TrainingDataSet/Prestwick library screen 6hr 1um_C02_s4_w2.TIF')
View(md)
md = read.metadata('/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/ColocalizR_TrainingDataSet/Prestwick library screen 6hr 1um_C02_s4_w3.TIF')
View(md)
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-04-11/ADJ_AG_2018_04_11.RData")
library(sp)
library(doParallel)
library(parallel)
library(pbapply)
library(gtools)
library(MetaxpR)
library(gplots)
library(reshape)
library(rethinking)
library(plotrix)
library(MetaxpR)
library(EBImage)
library(RBioFormats)
library(MorphR)
library(pbapply)
library(doParallel)
data = read.csv('/mnt/datapart1/Marion/Analyses/IGR/Ligia/ColonyDetection/2018-08-27/20180816-U2OSLCGFPvsATGGKO-LTX-EXP2/results.csv')
data = read.csv('/mnt/datapart1/Marion/Analyses/IGR/Ligia/ColonyDetection/2018-08-27/20180816-U2OSLC3GFPvsATGGKO-LTX-EXP2/results.csv')
data = read.csv('/mnt/datapart1/Marion/Analyses/IGR/Ligia/ColonyDetection/2018-08-27/20180816-U2OSLC3GFPvsATG5KO-LTX-EXP2/results.csv')
View(data)
data$Cond = paste(data$ID,data$Well)
data$Cond = paste(data$ID,data$Well,sep='_')
d = data[grepl('CTRs_2|LTX1-C_2|LTX1-B_2|LTX2-G_5',data$Cond)]
d = data[grepl('CTRs_2|LTX1-C_2|LTX1-B_2|LTX2-G_5',data$Cond),]
View(d)
bars = barplot(d$Surface, ylab = 'Surface', names.arg = gsub('_', '', d$Cond]), col = 'black')
bars = barplot(d$Surface, ylab = 'Surface', names.arg = gsub('_', '', d$Cond), col = 'black')
abline(h=0)
bars = barplot(d$Surface, ylab = 'Surface', names.arg = gsub('_', '', d$Cond),ylim = c(0,20), col = 'black')
abline(h=0)
bars = barplot(d$Surface, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,20), col = 'black')
abline(h=0)
bars = barplot(d$Colonies, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,400), col = 'black')
abline(h=0)
bars = barplot(d$Colonies, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,500), col = 'black')
bars = barplot(d$Surface, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,20), col = 'black')
abline(h=0)
bars = barplot(d$Colonies, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,400), col = 'black')
abline(h=0)
pdf('ColonyDetection', h=5,w=10)
par(mfrow=c(1,2))
bars = barplot(d$Surface, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,20), col = 'black')
abline(h=0)
bars = barplot(d$Colonies, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,400), col = 'black')
abline(h=0)
dev.off()
pdf('ColonyDetection', h=5,w=10)
par(mfrow=c(1,2))
bars = barplot(d$Surface, ylab = 'Surface', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,20), col = 'black')
abline(h=0)
bars = barplot(d$Colonies, ylab = '# of colonies', names.arg = gsub('_', ' ', d$Cond),ylim = c(0,400), col = 'black')
abline(h=0)
dev.off()
save.image("/mnt/datapart1/Marion/Analyses/Projects/ColonyDetection/ExFigure.RData")
load("/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/PCC_12260.R.RData")
View(BAR)
View(Comp)
View(BAR)
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-04-11/ADJ_AG_2018_04_11.RData")
View(Summary)
View(Dots)
load("/mnt/datapart1/Marion/Analyses/IGR/Wei/LysoSensor/2018-06-14/LysoSensor_Analysis.RData")
View(Results)
load("/mnt/datapart1/Marion/Analyses/IGR/Ligia/Colocalization/2018-01-09/Redaporfin - Golgi/Golgi disrupting agents/Analysis/RedaporfinGolgiColoc_Analysis_DisruptingAgents.RData")
View(Summary)
View(Results)
load("/mnt/datapart1/Marion/Analyses/IGR/Andrea/LC3-GFP/21112016 - U2OS/RData_LC3Analysis_U2OS.RData")
View(Results)
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/AG - eiF2a/2017-06-09/AGeiF2a_20170529.RData")
View(Results)
write.csv(Results, 'Application.csv', row.names = F, quote = F)
View(Summary)
View(PlateSummary)
write.csv(PlateSummary, 'Application.csv', row.names = F, quote = F)
load("/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/PCC.R.RData")
View(DrugID)
source("https://bioconductor.org/biocLite.R")
biocLite("hpar")
library(hpar)
getHpa(id = "ENSG00000000003")
getHpa(id = "ENSG00000000003", hpadata = "hpaSubcellularLoc")
getHpa(id = "ENSG00000000003", hpadata = "hpaSubcellularLoc", type = 'details')
remove.packages(ColocalizR)
remove.packages('ColocalizR')
devtools::install_github('kroemerlab/ColocalizR')
library(ColocalizR)
Launcher()
library(ColocalizR)
Launcher()
Launcher()
library(ColocalizR)
lAUNCHER(0)
Launcher(0)
remove.packages('ColocalizR')
install.packages("/mnt/datapart1/Git/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
colocSgl
install.packages("/mnt/datapart1/Git/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
remove.packages('ColocalizR')
install.packages("/mnt/datapart1/Git/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
build('/mnt/datapart1/Git/ColocalizR')
devtools::build('/mnt/datapart1/Git/ColocalizR')
install.packages("/mnt/datapart1/Git/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-04-11/ADJ_AG_2018_04_11.RData")
unique(DrugID$Plate.ID)
View(DrugID)
DrugID.red = DrugID[grepl('18416|18415|18426|18425', DrugID$Plate.ID),]
save(DrugID.red, '/mnt/datapart1/Marion/Analyses/IGR/Juliette/2018-04-11/DrugID.RData')
save(DrugID.red, file = '/mnt/datapart1/Marion/Analyses/IGR/Juliette/2018-04-11/DrugID.RData')
save(DrugID.red, file = '/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-04-11/DrugID.RData')
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-04-11/DrugID.RData")
View(DrugID.red)
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-02-22/ADS_2018_02_22.RData")
unique(DrugID$Plate.ID)
unique(DrugID$PlateID)
View(DrugID)
DrugID = data.frame(reshape::colsplit(DrugID$GlobalWellID,split = '_', names = c('PlateID', 'WellID')))
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-02-22/ADS_2018_02_22.RData")
DrugID = data.frame(reshape::colsplit(DrugID$GlobalWellID,split = '_', names = c('PlateID', 'WellID')), DrugID)
View(DrugID)
unique(DrugID$PlateID)
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-02-05/Seg 2/ADJ_AG.RData")
unique(DrugID$PlateID)
DrugID.red = DrugID[grepl('17406|17417|17407|17418', DrugID$PlateID),]
save(DrugID.red, file = '/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-02-05/Seg2/DrugID.RData')
save(DrugID.red, file = '/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-02-05/Seg 2/DrugID.RData')
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-10-17/ADJ_AG.RData")
unique(DrugID$PlateID)
unique(DrugID$Plate.ID)
DrugID.red = DrugID[grepl('19128|19138|19136|19140', DrugID$PlateID),]
load("/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-10-17/ADJ_AG.RData")
DrugID.red = DrugID[grepl('19128|19138|19136|19140', DrugID$Plate.ID),]
save(DrugID.red, file = '/mnt/datapart1/Marion/Analyses/IGR/Juliette/Autophagic Drugs Screening/2018-10-17/DrugID.RData')
load("/mnt/datapart1/Marion/Analyses/Projects/Colocalization/Article_ColocalizR/PCC_5methods.RData")
View(MyIm)
unique(MyIm$Well)
View(Comp)
shiny::runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
runApp('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR/inst/shiny-app')
setwd('/mnt/datapart1/Git/Test_ColocalizR/ColocalizR')
library(devtools)
document()
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
documnet()
documemt()
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
Launcher()
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
Launcher()
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
runApp('inst/shiny-app')
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
Launcher()
runApp('inst/shiny-app')
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remova.packages('ColocalizR')
remove.packages('ColocalizR')
library(devtools)
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
remove.packages('ColocalizR')
document()
build()
library(ColocalizR)
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
load("/mnt/datapart1/Marion/Analyses/Projects/Colocalization/OtherAnalysis/Charlotte/Images/ResultsTest/Results/Results.RData")
View(Summary)
Launcher()
Launcher()
Launcher()
library(RBioFormats)
library(EBImage)
library(MetaxpR)
library(MorphR)
# folder = '/mnt/datapart1/Marion/Analyses/Projects/Colocalization/OtherAnalysis/Charlotte/Images/008M 02.07.18/T72h/T1.1'
folder = '/mnt/datapart1/Marion/Analyses/Projects/Colocalization/OtherAnalysis/Diego/Images/1/TimePoint_1/'
images = list.files(folder, full.names = T, recursive = T)
images = images[1:3]
images
RAW = lapply(images, function(x) readImage(x))
LOG = lapply(RAW, function(x) MetaxpR::Normalize(log10(x+1)))
IM = lapply(RAW, function(x) {q = quantile(x,probs=seq(0,1,10**(-3))); R = c(head(q,n=2)[2],tail(q,n=2)[1]);
MetaxpR::Normalize(x,inputRange=R)})
#
P = lapply(IM, function(x) {P = x-gblur(x,50); P[which(P<0)] = 0 ; MetaxpR::Normalize(P)})
w1 = IM[[1]]
display(w1)
w1TH = thresh(w1, h = 50, w = 50, offset = 0.05)
display(w1TH)
w1Op = MorphR::MorphRecons(f = geodilate,reference = w1TH,element = makeBrush(5,'disc'),oc='open')
w1Cl = MorphR::MorphRecons(f = geoerode,reference = w1Op,element = makeBrush(5,'disc'),oc='close')
display(w1Cl)
T1 = opening(closing(fillHull(w1Cl),makeBrush(5,'disc')),makeBrush(5,'disc'))
display(T1)
seed = erode(T1, makeBrush(15,'box'))
NMask = propagate(T1, bwlabel(seed), mask = T1)
display(NMasl)
display(NMask)
Launcher()
seed = erode(T1, makeBrush(19,'box'))
NMask = propagate(T1, bwlabel(seed), mask = T1)
display(NMask)
remove.packages('ColocalizR')
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
remove.packages('ColocalizR')
build()
document()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
seq(0.5,1.5,0.25)
CytoWindow = 50
seq(0.5,1.5,0.25)*as.numeric(CytoWindow)
CytoWindow = 30
seq(0.5,1.5,0.25)*as.numeric(CytoWindow)
CytoWindow = 10
seq(0.5,1.5,0.25)*as.numeric(CytoWindow)
remove.packages('ColocalizR')
build()
document()
build()
install.packages("/mnt/datapart1/Git/Test_ColocalizR/ColocalizR_0.4.4.tar.gz", repos = NULL, type = "source")
library(ColocalizR)
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
Launcher()
